.array {
  color: var(--schema-array);
}

.number {
  color: var(--schema-number);
}

.string {
  color: var(--schema-string);
}

.integer {
  color: var(--schema-integer);
}

.schemaRole {
  font-size: var(--text-size-xs);
  line-height: var(--text-lh-s);
  color: var(--green-03);
  border: none;
  margin: 0.8rem 0.8rem 0 0;
  padding: 0.6rem 0.8rem;
  border-radius: 4px;
  background-color: rgba(0, 255, 104, 0.16);
}

.schemaCode {
  color: var(--white);
  font-size: var(--text-size-xs);
}

.schemaSubText {
  line-height: var(--text-lh-m);
  font-size: var(--text-size-s);
}

.schemaHeader {
  padding: 2.4rem;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  border: none;
  background: var(--black-04);

  .schemaTitle {
    font-size: var(--text-size-m);
    color: var(--white);
  }

  .schemaDescription {
    display: flex;
    padding: 0.5rem 0;
    gap: 2rem;
    justify-content: space-between;
    color: var(--white);

    .schemaAuthRequired {
      width: 40%;
    }
  }
}

.schemaBodyKeyLabel {
  color: var(--white);
}

.schemaObjectContent {
  display: flex;
  flex-direction: row;
  position: relative;

  p {
    color: var(--white);
  }

  button {
    position: relative;
    color: var(--green-02) !important;
    background-color: var(--black-01);
    border: none;
    padding: 1rem;
    border-radius: 4px;
    font-size: var(--text-size-xs);
  }
}

.schemaObjectHeader {
  flex-direction: column !important;

  .schemaObjectBody {
    padding: 0.8rem 1.6rem;
    width: 100%;
    box-sizing: border-box;
    height: fit-content;
    opacity: 0;
    display: none;

    &.objectOpen {
      opacity: 1;
      gap: 2.4rem;
      margin-top: 1rem;
      display: flex;
      flex-direction: column;
    }

    .schemaObjectDescription {
      font-weight: normal;
      font-size: var(--text-size-xs);
    }

    .schemaBodyHeader {
      flex-direction: column;
    }
  }
}

.schemaBody {
  background-color: var(--json-midnight);
  padding: 2.8rem 2.3rem;

  .schemaBodySignature {
    display: flex;
    flex-direction: column;
    position: relative;

    .schemaBodyDescription+.schemaBodyDescription {
      text-indent: 1.6rem;
      padding: 1rem;
      color: var(--white);
      background-color: rgba(219, 219, 219, 0.05) !important;
      border-radius: 4px;
    }

    .schemaBodySignature {
      padding: 1rem 1.6rem;
    }

    .schemaBodyHeader {
      display: flex;
      flex-direction: row;
      color: var(--white);
      font-size: var(--text-size-s);
      margin: 0 0.8rem 0 0;
      font-weight: 700;
      width: 100%;

      .schemaBodyType {
        display: flex;
        width: fit-content;
        font-size: var(--text-size-xs);
        font-weight: 400;
        align-items: var(--text-align-center);
        width: 100%;
      }

      .schemaEnums {
        width: fit-content;
        height: fit-content;
        font-size: var(--text-size-xs);
        line-height: var(--text-lh-s);
        color: var(--green-03);
        border: none;
        padding: 0.6rem 0.8rem;
        border-radius: 4px;
        background-color: rgba(0, 255, 104, 0.16);
      }

      .schemaItems {
        color: var(--green-02);
        font-size: var(--text-size-xs);
        line-height: var(--text-lh-s);
        color: var(--green-03);
        border: none;
        margin: 0.8rem 0.8rem 0 0;
        padding: 0.6rem 0.8rem;
        white-space: nowrap;
        border-radius: 4px;
      }

      .schemaRegexContainer {
        width: fit-content;
        display: flex;
        flex-direction: row;

        .schemaBodyPattern {
          width: 100%;
          font-size: 1.1rem;
          color: var(--green-01);
          margin: 0 1rem;
        }

        .schemaPatternType {
          color: var(--green-03);
          font-size: var(--text-size-xs);
          font-weight: 400;
        }
      }
    }

    .schemaBodyDescription {
      display: inline-block;
      white-space: break-spaces;
      color: var(--copy-color);
      margin-top: 1rem;
      font-size: var(--text-size-xs);
      line-height: var(--text-lh-xl);
      margin-bottom: 2.4rem;

      &.objectOpen {
        margin-bottom: 1rem;
      }
    }

    .schemaRole {
      background-color: rgba(255, 255, 255, 0.16);
      border: none;
      font-size: var(--text-size-xs);
      font-weight: 400;
      line-height: var(--text-lh-xxl);
      color: var(--white);
      height: fit-content;
      padding: 0.5rem 0.5rem;
      margin: 0 0.5rem;
    }
  }

  .enumFlex {
    font-size: var(--text-size-xs);
    display: flex;
    gap: 0.8rem;
    width: 100%;

    strong {
      font-size: var(--text-size-s);
    }

    >p {
      display: flex;
      color: var(--white);
      min-width: 35%;
      margin-bottom: unset;
      align-items: var(--text-align-center);
    }

    .defaultValue {
      display: flex;
      align-items: var(--text-align-center);
      gap: 0.5rem;
    }

    .defaultValueLabel,
    .schemaDefaultValue {
      font-size: var(--text-size-xs);
      color: var(--gray-08);
    }

    .schemaDefaultValue {
      border: 2px solid var(--gray-08);
      border-radius: 4px;
      padding: 0.3rem;
    }

    .enumContainer {
      display: flex;
      flex-wrap: wrap;
      gap: 0.8rem;
      align-items: var(--text-align-center);
    }

    .enumLabel {
      font-size: var(--text-size-xs);
      line-height: var(--text-lh-s);
      color: var(--gray-08);
    }

    .enumType {
      font-size: var(--text-size-xs);
    }

    .enumLabel,
    .enumType {
      display: flex;
      justify-content: var(--text-align-center);
      align-items: var(--text-align-center);
    }
  }
}

.schemaBodySignature {
  &:hover {
    >.sourceButton {
      opacity: 1;
    }
  }

  >.schemaBodySignature {
    background-color: rgba(219, 219, 219, 0.05) !important;
    border-radius: 4px;
    margin-bottom: 1rem;
  }
}

.sourceButton {
  opacity: 0;
  color: var(--gray-01);
  font-family: lucida console, Monaco, monospace;
  position: absolute;
  padding: 0.2rem;
  margin-top: 0.3rem;
  right: 0.2rem;
  width: 1.8rem;
  text-align: var(--text-align-center);
  cursor: pointer;
  font-weight: 700;
  font-size: var(--text-size-xxxs);
  transition: opacity 0.2s ease-in-out;

  &:hover {
    opacity: 1;
  }
}

.schemaHeader:hover+.schemaBody .sourceButtonMain {
  opacity: 1;
}

.sourceButtonMain {
  @extend .sourceButton;
  top: 1rem;
  right: 2.4rem;
  font-size: var(--text-size-s);
}

[data-state~="responsive.mobileS"],
[data-state~="responsive.mobileM"],
[data-state~="responsive.mobileL"] {
  .enumFlex {
    flex-wrap: wrap;
  }

  .schemaHeader {
    .schemaDescription {
      flex-wrap: wrap;

      .schemaAuthRequired {
        width: unset;
      }
    }
  }
}
